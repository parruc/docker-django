# This adds security headers
#add_header X-Frame-Options "SAMEORIGIN";
add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
add_header X-XSS-Protection "1; mode=block";
add_header X-Content-Type-Options "nosniff";


# Redirect all www-less traffic to the www.site.com domain
# (you could also do the opposite www -> non-www domain)


{% if certificatespath %}

server {
    listen 80;
    server_name {{ hostname }} www.{{hostname}};
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }
    location / {
        return 301 https://{{hostname}}$request_uri;
    }
}

server {
    listen 443 ssl;
    ssl_certificate {{ certificatespath }}/fullchain.pem;
    ssl_certificate_key {{ certificatespath }}/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    server_name www.{{hostname}};
    rewrite ^/(.*) https://{{hostname}}/$1 permanent;
}

server {
        listen 443 ssl;

        ssl_certificate {{ certificatespath }}/fullchain.pem;
        ssl_certificate_key {{ certificatespath }}/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

{% else %}

server {
    listen 80;
    server_name www.{{hostname}};
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }
    location / {
        rewrite ^/(.*) http://{{hostname}}/$1 permanent;
    }
}

server {
    listen 80;
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }

{% endif %}

    add_header Content-Security-Policy "{{ contentsecuritypolicy }}";
    server_name {{hostname}};
    access_log /var/log/nginx/{{hostname}}.access.log;
    error_log /var/log/nginx/{{hostname}}.error.log;
    client_max_body_size 20M;

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_pass http://localhost:{{ port }};
    }

    {% if async %}
    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://localhost:{{ port }};
    }
    {% endif %}
}
