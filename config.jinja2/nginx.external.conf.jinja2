# This adds security headers
add_header X-Frame-Options "SAMEORIGIN";
add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
add_header X-XSS-Protection "1; mode=block";
add_header X-Content-Type-Options "nosniff";


upstream wsgi_upstream_{{ projectname }} {
  {% for s in range(scale) %}
    server 127.0.0.1:{{ portinternal + s }};
  {% endfor %}
}
{% if async %}
upstream asgi_upstream_{{ projectname }} {
    server 127.0.0.1:{{ portinternal + scale }};
}
{% endif %}

{% if certificatespath %}
# TODO: OTTIMIZZARE LE CONFIGURAZIONI PER CERTBOT
server {
    listen {{ portexternal}};
    access_log /var/log/nginx/{{hostname}}.access.log;
    error_log /var/log/nginx/{{hostname}}.error.log;
    server_name {{ hostname }} www.{{hostname}};
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }
    location / { 
        return 301 https://{{hostname}}$request_uri;
    }
}

server {
        {% if portexternalssl == 443 %}
        listen {{portexternalssl}} ssl;
        {% else %}
        listen 127.0.0.1:{{portexternalssl}} ssl;
        {% endif %}
        server_name www.{{hostname}};
        ssl_certificate {{ certificatespath }}/fullchain.pem;
        ssl_certificate_key {{ certificatespath }}/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }

        location / {
            return 301 https://{{hostname}}$request_uri;
        }
}

server {
        {% if portexternalssl == 443 %}
        listen {{portexternalssl}} ssl;
        {% else %}
        listen 127.0.0.1:{{portexternalssl}} ssl;
        {% endif %}
        ssl_certificate {{ certificatespath }}/fullchain.pem;
        ssl_certificate_key {{ certificatespath }}/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

{% else %}

server {
    listen {{ portexternal }};

{% endif %}

    add_header Content-Security-Policy "{{ contentsecuritypolicy }}";
    server_name {{hostname}};
    root {{projectpath}}/www/;
    access_log /var/log/nginx/{{hostname}}.access.log;
    error_log /var/log/nginx/{{hostname}}.error.log;
    client_max_body_size {{ uploadlimit }}M;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot/;
    }
    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        include uwsgi_params;
        uwsgi_pass wsgi_upstream_{{ projectname }};

    }

    {% if async %}
    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_pass http://asgi_upstream_{{ projectname }};
    }
    {% endif %}

{% if not development %}
    location ~ ^/(static|media)/ {
# TODO: FIX THIS: BROKE
#        location ~ \.mp4$$ {
#            mp4;
#            expires 15d;
#        }
        location ~ \.(m4s|ts|jpg|jpeg|png|gif|ico|css|js|unityweb)$$ {
            expires 15d;
        }
    }
{% endif %}
}
