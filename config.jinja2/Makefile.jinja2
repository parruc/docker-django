node:
	cd project/{{ projectname }}/layout; npm install

projectfolder:
	rm -Rf project
	mkdir -p project/{{ projectname }}
	cd project/{{ projectname }}; git clone {{ gitrepository }} .
	cd project/{{ projectname }}; git checkout {{ gitbranch }}
	{% if spooler %}
	mkdir -p project/{{ projectname }}/{{ projectname }}/spooler
	{% endif %}

install: down projectfolder node up update

scale:
	docker-compose up -d --scale wsgi={{ scale }}

build:
	docker-compose build wsgi{% if async %} asgi{% endif %}

up: scale chown

down:
	docker-compose down

recreate: down up

rebuild: down chown build up

restart:
	docker-compose restart

reload:
	touch project/{{ projectname }}/{{ projectname }}/settings.py

clearcache:
	docker-compose exec redis redis-cli -n 1 FLUSHDB

chown:
	{% if development %}
	sudo chown -R `id -un` .
	{% else %}
	chown www-data:www-data www -R
	{% if spooler %}
	chown www-data:www-data project/{{ projectname }}/{{ projectname }}/spooler
	{% endif %}
	{% endif %}

migrations:
	docker-compose exec wsgi python manage.py makemigrations

migrate:
	docker-compose exec wsgi python manage.py migrate

messages:
	{% if  development %}
	docker-compose exec wsgi python manage.py  makeallmessages -a -i node_modules
	{% endif %}
	docker-compose exec wsgi python manage.py compilemessages

{% if  development %}
theme: node
	cd project/{{ projectname }}/layout; npm run dev
	docker-compose exec wsgi python manage.py collectstatic --noinput -l -i */report.html
	cd project/{{ projectname }}/layout; npm run watch

fixtures:
	docker-compose exec wsgi python manage.py loaddata initial_data

update: pull migrate fixtures messages theme
{% else %}
theme: node
	cd project/{{ projectname }}/layout; npm run build
	docker-compose exec wsgi python manage.py collectstatic --noinput

fixtures:
	echo "Skipping fixtures in production"

update: pull migrate fixtures messages theme chown clearcache reload
{% endif %}

pull:
	cd project/{{ projectname }}; git pull

logs:
	docker-compose logs -f --timestamp --tail=100

superuser:
	docker-compose exec wsgi python manage.py createsuperuser
