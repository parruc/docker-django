version: '3.8'

services:

  db:
    build:
      context: .
      dockerfile: config/postgres.dockerfile
    image: postgres:{{projectname}}
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nofile:
        soft: 2048
        hard: 4096
    command: postgres -c max_connections=250 -c shared_buffers=75MB
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./config/postgres.conf:/etc/postgresql/postgresql.conf
    restart: always
    environment:
      POSTGRES_DB: {{dbname}}
      POSTGRES_USER: {{dbuser}}
      POSTGRES_PASSWORD: {{dbpassword}}

  wsgi: &django
    sysctls:
      - net.core.somaxconn=1024
    depends_on:
      - db
      - redis
    build:
      context: .
      dockerfile: config/django.dockerfile
    ports:
      - "127.0.0.1:{{portinternal}}-{{portinternal + scale - 1}}:8000"
    image: python:{{projectname}}
    command: /project/django.entrypoint.wsgi.sh
    working_dir: /project/{{projectname}}
    restart: always
    environment:
        DJANGO_SETTINGS_MODULE: {{projectname}}.settings
    volumes:
      - ./project/{{projectname}}:/project/{{projectname}}
      - ./www/static:/var/www/static
      - ./www/media:/var/www/media
      - ./config/basesettings.py:/project/{{projectname}}/{{projectname}}/basesettings.py
{% if development %}
      - ./vscode/server-extensions:/root/.vscode-server/extensions
      - ./vscode/server-insiders-extensions:/root/.vscode-server-insiders/extensions
    stdin_open: true
    tty: true
{% endif %}

{% if async %}
  asgi: 
    <<: *django
    ports:
      - "127.0.0.1:{{portinternal + scale }}:8000"
    command: /project/django.entrypoint.asgi.sh
{% endif %}

#   web:
#     depends_on:
#       wsgi
# {% if async %}
#       asgi
# {% endif %}
#     image: nginx:latest
#     ports:
#       "127.0.0.1:{{portinternal}}:80"
#     volumes:
#       ./static:/var/www/static
#       ./media:/var/www/media
#       ./config/nginx.internal.conf:/etc/nginx/conf.d/default.conf
#     restart: always

  redis:
    image: redis
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nofile:
        soft: 2048
        hard: 4096
    restart: always
    entrypoint: redis-server --appendonly yes
    volumes:
      - ./redis:/data
